# code: language=ansible
---
- name: Install prerequisites
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - apt-transport-https
      - unbound
    state: present

- name: Enable unbound
  ansible.builtin.service:
    name: unbound
    enabled: true
    state: started

- name: Add Tor's official GPG key
  ansible.builtin.apt_key:
    url: 'https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc'
    keyring: /usr/share/keyrings/tor-archive-keyring.gpg
    state: present
# yamllint disable rule:line-length
- name: Add Tor's official apt repository
  ansible.builtin.apt_repository:
    update_cache: true
    filename: tor
    repo: 'deb [arch=amd64 signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org {{ ansible_distribution_release }} main'
    state: present

- name: Add Tor's official apt source repository
  ansible.builtin.apt_repository:
    update_cache: true
    filename: tor
    repo: 'deb-src [arch=amd64 signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org {{ ansible_distribution_release }} main'
    state: present
# yamllint enable rule:line-length

- name: Install tor, nyx, and debian keyring
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - tor
      - deb.torproject.org-keyring
    state: present

- name: Create .nyx Directory
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.nyx
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: '0755'

- name: Copy nyx Config
  ansible.builtin.copy:
    src: nyx.conf
    dest: /home/{{ ansible_user }}/.nyx/config
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: '0644'

- name: Add user to debian-tor group
  ansible.builtin.user:
    name: '{{ ansible_user }}'
    groups: debian-tor
    append: true

- name: Copy Tor Exit Notice Page
  ansible.builtin.copy:
    src: tor-exit-notice.html
    dest: /etc/tor/tor-exit-notice.html
    owner: debian-tor
    group: debian-tor
    mode: '0644'

- name: Create Directories for Tor Exit Node 1 and 2
  ansible.builtin.file:
    path: '/etc/tor/{{ item }}'
    state: directory
    owner: debian-tor
    group: debian-tor
    mode: '0644'
  loop:
    - /node1
    - /node2

- name: Create Log Files for Tor Exit Node 1 and 2
  ansible.builtin.file:
    path: '/etc/tor/{{ item }}'
    state: touch
    owner: debian-tor
    group: debian-tor
    mode: '0644'
    modification_time: preserve
    access_time: preserve
  loop:
    - /node1/notices.log
    - /node2/notices.log

- name: Load Encrypted Variables for Populating Torrc Files
  ansible.builtin.include_vars:
    file: secrets.yml.vault

- name: Configure Tor Node 1
  ansible.builtin.template:
    src: torrc.j2
    dest: /etc/tor/node1/torrc
    owner: debian-tor
    group: debian-tor
    mode: '0644'
  vars:
    relay_nickname: '{{ tor_relay_nickname }}'
    relay_contact_info: '{{ tor_relay_contact_info }}'
    relay_ipv4_address: '{{ tor_relay_ipv4_address }}'
    relay_ipv6_address: '{{ tor_relay_ipv6_address }}'
    relay_family_members: '{{ tor_relay_family_members }}'
    relay_oport: '{{ tor_relay_oport }}'
    relay_oport_node2: '{{ tor_relay_oport_node2 }}'

- name: Copy unbound Config
  ansible.builtin.copy:
    src: unbound.tor.conf
    dest: /etc/unbound/unbound.conf.d/tor.conf
    owner: root
    group: root
    mode: '0644'

- name: Create unbound Log Directory
  ansible.builtin.file:
    path: /etc/unbound/logs
    state: directory
    owner: unbound
    group: unbound
    mode: '0755'

- name: Create unbound Log File
  ansible.builtin.file:
    path: /etc/unbound/logs/unbound.log
    state: touch
    owner: unbound
    group: unbound
    mode: '0644'
    modification_time: preserve
    access_time: preserve

- name: Fix unbound AppArmor Profile
  ansible.builtin.copy:
    src: unbound.apparmor.profile
    dest: /etc/apparmor.d/local/usr.sbin.unbound
    owner: root
    group: root
    mode: '0644'

- name: Reload AppArmor Security Profile
  ansible.builtin.command:
    cmd: 'apparmor_parser -r /etc/apparmor.d/usr.sbin.unbound'
  changed_when: false

- name: Restart unbound
  ansible.builtin.service:
    name: unbound
    state: restarted

- name: Create Backup of resolv.conf if it doesn't exist
  ansible.builtin.command:
    cmd: cp -n /etc/resolv.conf /etc/resolv.conf.backup
  changed_when: false

- name: Remove Default symlink
  ansible.builtin.file:
    path: /run/systemd/resolve/stub-resolv.conf
    state: absent

- name: Remove Default resolv.conf
  ansible.builtin.file:
    path: /etc/resolv.conf
    state: absent

- name: Create New resolv.conf With Local DNS Server Address
  ansible.builtin.lineinfile:
    path: /etc/resolv.conf
    line: 'nameserver 127.0.0.1'
    owner: root
    group: root
    mode: '0644'
    create: true
    state: present

- name: Lock resolv.conf from being changed
  ansible.builtin.command:
    cmd: chattr +i /etc/resolv.conf
  changed_when: false

- name: Restart resolved Service
  ansible.builtin.service:
    name: systemd-resolved
    state: restarted

- name: Copy Tor Node 1 systemd Service File
  ansible.builtin.copy:
    src: torr.service
    dest: /etc/systemd/system/torr.service
    owner: root
    group: root
    mode: '0644'

- name: Copy Tor Node 2 systemd Service File
  ansible.builtin.copy:
    src: torr2.service
    dest: /etc/systemd/system/torr1.service
    owner: root
    group: root
    mode: '0644'

- name: Enable Tor Node 1 systemd Service
  ansible.builtin.service:
    name: torr
    enabled: true
    state: started

- name: Enable Tor Node 2 systemd Service
  ansible.builtin.service:
    name: torr1
    enabled: true
    state: started

- name: Setup ufw rules to allow
  ansible.builtin.command:
    cmd: |
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow 9001 comment 'Tor OPort'
      ufw allow 443 comment 'Tor ORPort'
      ufw allow 80 comment 'Tor DirPort'
      ufw allow 192.168.1.0/24 to any port 22 comment 'SSH Internal'
      ufw allow 10.0.0.0/24 to any port 22 comment 'SSH Internal'
  changed_when: false

- name: Enable ufw
  ansible.builtin.command:
    cmd: yes | ufw enable
  changed_when: false
